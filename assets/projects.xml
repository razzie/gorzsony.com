<?xml version="1.0" encoding="utf-8" ?>
<projects>
  
  <project>
    <id>floating_islands</id>
    <name>Floating Islands</name>
    <img>img/floating_islands.png</img>
    <description>
      Floating Islands is yet another example of my experiments with procedurally generated terrains.
      I developed an algorithm that takes island positions and island connections as input parameters and generates a 3D grid world using a Perlin noise internally.
      I also focused on the cartoonish design with edge outlining and also had an A* pathfinder algorithm set up for the little red cube.
    </description>
  </project>
  
  <project>
    <id>flyff</id>
    <name>Flyff fansite</name>
    <img>img/flyff.png</img>
    <description>
      Flyff.extra.hu was a hungarian fan site of Flyff (Fly For Fun) online game.
      During the 3-4 years of its existence I developed more and more new features to make it a fully functional web portal.
      It was very interesting to see it slowly getting attention.
      Members started generating content in the forms of forum entries, polls, screenshots and news for the home page.
      The site even had a few moderators and admins.
      In 2010 extra.hu decided to close its free hosting service and the site went offline.
      I could have moved it to a different(even paid) hosting service, but most members and I have already lost interest in the game.
      I still have a backup copy of the site and all of its content.
    </description>
  </project>
  
  <project>
    <id>gglib</id>
    <name>gglib</name>
    <img>img/gglib.png</img>
    <description>
      GGlib was a library I used to develop between 2014 and 2016.
      It served as a sandbox to help me to learn about the new features of the C++11 standard.
      I also found a great use of it while working on other side projects.
      Due to some early design choices(including the heavy use of virtual function calls) I finally decided to send it into retirement and started working on its successor: <a href="https://github.com/razzie/librazzie">librazzie</a>.
    </description>
  </project>
  
  <project>
    <id>ground_tool</id>
    <name>Ground Tool</name>
    <img>img/ground_tool.png</img>
    <description>
      The idea behind the demo was a game with floating islands.
      Though this game never made it to the reality, Ground Tool was born as a result of experimenting with the rendering of these islands.
      The user can draw a polygon border to the island and when all points are connected, the program generates an island which can be inspected by zooming and moving the camera around.
    </description>
  </project>
  
  <project>
    <id>gtaonline_videos</id>
    <name>GTA Online videos</name>
    <img>img/gtaonline_videos.png</img>
    <description>
      I have way more playtime in Grand Theft Auto V (or GTA Online to be specific) than I would like to admit and most of that I've spent with friends I've met in the game.
      It became our little tradition to record funny, exciting or any memorable moments and later create videos of it.
      At this point there is quite a collection of those videos and I've uploaded the ones I made to <a href="https://www.youtube.com/c/razzquez">my youtube channel</a>.
      Most of the content is only meaningful to us, but I still hope viewers will find them entertaining
    </description>
  </project>
  
  <project>
    <id>hexagon</id>
    <name>Hexagon</name>
    <img>img/hexagon.png</img>
    <description>
      Hexagon is very similar to the Minecraft clone, but I wanted to try rendering hexagon blocks (hexagonal prisms to be correct) instead of cubes.
      The underlying datastructure is still a 3D grid of Perlin noise.
      One of the main differences is that this demo does not use textures, but has a custom shader that draws grass or rock detail based on the normal vectors.
    </description>
  </project>
  
  <project>
    <id>librazzie</id>
    <name>librazzie</name>
    <img>img/librazzie.png</img>
    <description>
      A header-only multi-purpose library designed to help me get started with my projects.
      It includes frameworks for logging, events, input, memory, thread and network+serialization and has some additional stuff like:
      a bitset class with iterators for true and false position, stream manipulators and parsers and an easy to use random number generator.
      <br /><br />
      Source code: <a href="https://github.com/razzie/librazzie">github.com/razzie/librazzie</a><br />
    </description>
  </project>
  
  <project>
    <id>logic_circuit_simulator</id>
    <name>Logic Circuit Simulator</name>
    <img>img/logic_circuit_simulator.png</img>
    <description>
      Logic Circuit Simulator was a university project I had to finish in a semester.
      It offers a variety of logic gates and a lot of visual customization options.
      Some special elements are also available, like seven-segment display, matrix display, JK flip-flop, adjustable timer and module.
      A selected part of a logic circuit can be converted to a module, where the circuit's input elements (buttons, switches) become the input pins and output elements (LEDs) become the output pins of the module.
      Modules also support recursion.
      <br /><br />
      Source code: <a href="https://github.com/razzie/LogicCircuitSimulator">github.com/razzie/LogicCircuitSimulator</a><br />
    </description>
  </project>
  
  <project>
    <id>minecraft_clone</id>
    <name>Minecraft clone</name>
    <img>img/minecraft_clone.png</img>
    <description>
      Minecraft clone is a graphics project I worked on during the final year of the university.
      Contrary to its name it is not a real clone, it features no game elements.
      My primary motivation was the recreation of a Minecraft-like rendering in C++.
    </description>
  </project>
  
  <project>
    <id>poccemod</id>
    <name>PocceMod</name>
    <img>img/poccemod.png</img>
    <description>
      I made this mod originally for my tiny private FiveM server to have some fun with friends.
      (FiveM is a modification for Grand Theft Auto V enabling you to play multiplayer on customized dedicated servers.)
      Then I thought, why not share it with others? So I published it and listened to feedback from the community to improve it even more.
      The project went through 2 months of intensive development (200 commits in the first month and 150 in the second)
      until I ended up quite pleased with the results.
      <br />
      Most of the FiveM player base and modder community is focused on
      role playing, while the goal of PocceMod was always to be a standalone sandbox entertainment mod.
      I was the first developer who enabled players to have fun with GTA's unused rope API in a multiplayer environment
      (since it's not synced by default).
      <br /><br />
      Source code: <a href="https://github.com/razzie/PocceMod">github.com/razzie/PocceMod</a><br />
    </description>
  </project>

  <project>
    <id>potato_game</id>
    <name>Potato Game</name>
    <img>img/potato_game.png</img>
    <description>
      PotatoGame is a procedural generated game about little potatoes with customizable AI (which was only done on paper).
      The goal is to have them win the game for you by gaining world domination.
      This was my second large game project (in terms of time and effort spent on it), but eventually I lost interest and motivation
      after forcing myself to work on it and focusing too much on the future outcome.
      I'm very proud of this project, but I gave up on ever finishing it.
      <br /><br />
      Source code: <a href="https://github.com/razzie/PotatoGame">github.com/razzie/PotatoGame</a><br />
    </description>
  </project>
  
  <project>
    <id>prepi</id>
    <name>Prepi</name>
    <img>img/prepi.png</img>
    <description>
      Prepi is an indie game project I was working on together with a friend.
      It was intended to be a rage game with puzzle elements.
      We took it so seriously we both quitted our jobs to be able to work on it full-time.
      After several month of development we reached a point where we wanted to introduce our game to the public via an Indiegogo campaign.
      Unfortunately the campaign failed, mostly because the lack of media attention (neither of us were expert on the topic).
      Also the game was probably in too early phase to show it to the public.
      Due to the failure of the campaign and smaller disagreements regarding the game design we decided not to continue the development.
      <br /><br />
      Source code: <a href="https://github.com/razzie/prepi">github.com/razzie/prepi</a><br />
    </description>
  </project>
  
  <project>
    <id>process_manager</id>
    <name>Process Manager</name>
    <img>img/process_manager.png</img>
    <description>
      Process Manager is a replacement application for the built-in Windows Task Manager with a lot of additional features.
      It keeps running in the background after closing the main window and can be brought back from the tray icon or by pressing Ctrl+F12.
    </description>
  </project>

  <project>
    <id>raztalk</id>
    <name>RazTalk</name>
    <img>img/raztalk.png</img>
    <description>
      A simple lobby/channel based registration-free webchat.
      <br /><br />
      Try it here: <a href="https://talk.gorzsony.com">talk.gorzsony.com</a><br />
      Source code: <a href="https://github.com/razzie/raztalk">github.com/razzie/raztalk</a>
    </description>
  </project>

  <project>
    <id>razziecraft_vanilla</id>
    <name>RazzieCraft Vanilla</name>
    <img>img/razziecraft_vanilla.png</img>
    <description>
      RazzieCraft Vanilla is Minecraft version 1.12.2 on steroids!
      This pack contains a ton of strictly curated mods that enhance the visuals and gameplay of vanilla Minecraft,
      but without breaking its charm. There are a lot of recipes for uncraftable existing items (like chain armor, slime ball, spawn eggs, etc) and a very few brand new stuff.
      <br /><br />
      Download <a href="https://www.technicpack.net/download">TechnicLauncher</a>.<br />
      Find and download <a href="https://www.technicpack.net/modpack/razziecraft-vanilla.976147">RazzieCraft Vanilla</a> in the launcher.<br />
      Profit.
    </description>
  </project>

  <project>
    <id>razzgravitas</id>
    <name>RazzGravitas</name>
    <img>img/razzgravitas.png</img>
    <description>
      RazzGravitas is a simple multiplayer game about gravity.
      At the time of making it I just gave up on a somewhat larger project and I needed to give myself a smaller task that I can prove to be able to finish.
      The sole objective was to experiment with something simple with no regrets about design decisions and no promises about the outcome.
      After about a month of development it ended up having multiplayer support with competitive game rules I'm satisfied with.
      I consider the game finished.
      <br /><br />
      Source code: <a href="https://github.com/razzie/razzgravitas">github.com/razzie/razzgravitas</a>
    </description>
  </project>
  
  <project>
    <id>razzie_messenger</id>
    <name>Razzie Messenger</name>
    <img>img/razzie_messenger.png</img>
    <description>
      Razzie Messenger is a messenger client and server I started working on during a one-week vacation at lake Balaton (Hungary).
      It uses a very simple plain text based protocol for network communication, look at the picture to see it in details.
      (Since then I prefer binary protocols due to the ineffeciency of string parsing and large packet sizes in case of text protocols.)
      The user can chose a nickname and pick colors for the name and the text messages.
      There is no registration and password authentication, however the server rejects the connection if a nickname is already taken in the current session.
      It is possible to send a file to an other user: in this case the server opens a random port which receives and forwards the file.
      Both users have to connect to this port, but it is done automatically.
      This solution was necessary due to the limitations of the text based protocol.
    </description>
  </project>
  
  <project>
    <id>server_client_app</id>
    <name>Server - client application</name>
    <img>img/server_client_application.png</img>
    <description>
      Server - client application is a small tool which helps creating and debugging text based network protocols.
      I developed it while working on Razzie Messenger and it had a great use.
      On the server tab the user can select one of the connected clients as a message target or just close the connection to them.
    </description>
  </project>
  
  <project>
    <id>windows_manager</id>
    <name>Windows Manager</name>
    <img>img/windows_manager.png</img>
    <description>
      Windows Manager is a reworked and extended edition of Process Manager.
      Besides the improved visual appearance it introduces new window tweaking options which you can see in the picture.
      One can for example change a sticky (always on top) window to act as a normal one.
    </description>
  </project>

</projects>